/*
  Returns a CSS variable property specific to themeing.
  Accepts an optional fallback, and optional map.
  - SCSS: color: theme-var($--theme-primary, blue)
  - CSS:  color: var(--theme-primary, blue)
  Throws error if the variable not part of the map
*/
:root.hw-theme-basic-blue {
  --color-primary: rgba(3, 52, 78, 0.85);
  --color-primary-font: #111111;
  --color-secondary: rgba(5, 85, 127, 0.85);
  --color-error: #b52025;
  --color-error-background: rgba(181, 32, 37, 0.08);
  --color-help-text: rgba(17, 17, 17, 0.7);
  --color-disabled: rgba(192, 192, 192, 0.48);
  --prefix-icon-color: rgba(3, 29, 110, 0.6);
  --linear-gradient-primary: rgba(5, 85, 127, 0.85) 0%, rgba(4, 68, 103, 0.85) 10%, rgba(3, 52, 78, 0.85) 100%; }

:root.hw-theme-basic-green {
  --color-primary: rgba(24, 66, 38, 0.85);
  --color-primary-font: #101c06;
  --color-secondary: rgba(38, 103, 60, 0.85);
  --color-error: #b52025;
  --color-error-background: rgba(181, 32, 37, 0.08);
  --color-help-text: rgba(16, 28, 6, 0.7);
  --color-disabled: rgba(192, 192, 192, 0.48);
  --prefix-icon-color: rgba(24, 90, 38, 0.6);
  --linear-gradient-primary: rgba(38, 103, 60, 0.85) 0%, rgba(31, 85, 49, 0.85) 10%, rgba(24, 66, 38, 0.85) 100%; }

/*
  Returns a CSS variable property specific to themeing.
  Accepts an optional fallback, and optional map.
  - SCSS: color: theme-var($--theme-primary, blue)
  - CSS:  color: var(--theme-primary, blue)
  Throws error if the variable not part of the map
*/
:root.hw-theme-basic-blue {
  --color-primary: rgba(3, 52, 78, 0.85);
  --color-primary-font: #111111;
  --color-secondary: rgba(5, 85, 127, 0.85);
  --color-error: #b52025;
  --color-error-background: rgba(181, 32, 37, 0.08);
  --color-help-text: rgba(17, 17, 17, 0.7);
  --color-disabled: rgba(192, 192, 192, 0.48);
  --prefix-icon-color: rgba(3, 29, 110, 0.6);
  --linear-gradient-primary: rgba(5, 85, 127, 0.85) 0%, rgba(4, 68, 103, 0.85) 10%, rgba(3, 52, 78, 0.85) 100%; }

:root.hw-theme-basic-green {
  --color-primary: rgba(24, 66, 38, 0.85);
  --color-primary-font: #101c06;
  --color-secondary: rgba(38, 103, 60, 0.85);
  --color-error: #b52025;
  --color-error-background: rgba(181, 32, 37, 0.08);
  --color-help-text: rgba(16, 28, 6, 0.7);
  --color-disabled: rgba(192, 192, 192, 0.48);
  --prefix-icon-color: rgba(24, 90, 38, 0.6);
  --linear-gradient-primary: rgba(38, 103, 60, 0.85) 0%, rgba(31, 85, 49, 0.85) 10%, rgba(24, 66, 38, 0.85) 100%; }

/*hw colors and shadows start */
/*hw input start*/
/*button constants end*/
/*hw colors and shadows start */
/*hw input start*/
/*button constants end*/
.hw-pagination-button-root {
  outline: none;
  padding: 8px 6px;
  min-width: 40px;
  line-height: 1.41;
  margin-right: 4px;
  font-size: 14px;
  font-weight: 400;
  border: 0.5px solid #ccc;
  text-shadow: #929292 0px 0.3px 0px;
  cursor: pointer;
  text-decoration: none;
  text-align: center;
  border-radius: 3px;
  position: relative;
  color: #403e40;
  user-select: none; }
  .hw-pagination-button-root:hover, .hw-pagination-button-root:focus {
    z-index: 25;
    transform: scale(1.075);
    background-color: transparent;
    outline: none; }
  .hw-pagination-button-root:active {
    outline: none;
    background-color: transparent; }
  .hw-pagination-button-root .disabled:hover, .hw-pagination-button-root .disabled:focus {
    z-index: 0;
    transform: scale(1); }
  .hw-pagination-button-root .active {
    background-color: var(--color-help-text);
    border: 0.5px solid white;
    color: white;
    font-weight: bolder;
    outline: none;
    text-shadow: 0px 1px 1px black;
    box-shadow: 0px 1px 1px 0px #c3c3c3, 1px 0px 1px -1px black, -1px 0px 1px -1px black, 0px -1px 1px -1px black;
    transform: scale(1.05);
    z-index: 15; }
    .hw-pagination-button-root .active:hover, .hw-pagination-button-root .active:focus {
      outline: none; }

/*# sourceMappingURL=hw-pagination-button.css.map */
